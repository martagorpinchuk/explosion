{"version":3,"file":"main.bundle.js","mappings":"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C,EAAE;gBAC9C,WAAW,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;aAC9B,CAAC;IACV,CAAC;CACJ;AACD,+BAA+B,GAAG,uBAAuB,CAAC;AAC1D,CAAC;;;;;;;UCjFD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEhDA;UACA;UACA;UACA;UACA","sources":["webpack:///./src/scripts/BlastFog.ts","webpack:///./src/scripts/BlastSphere.ts","webpack:///./src/scripts/ExplosionGfx.ts","webpack:///./src/scripts/GroundShockWave.ts","webpack:///./src/scripts/index.ts","webpack:///./src/scripts/shaders/BlastFog.Shader.ts","webpack:///./src/scripts/shaders/BlastSphere.Shader.ts","webpack:///./src/scripts/shaders/GroundShockWave.Shader.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/chunk loaded","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlastFog = void 0;\nconst three_5 = require(\"three\");\nconst BlastFog_Shader_1 = require(\"./shaders/BlastFog.Shader\");\n//\nclass BlastFog {\n    //\n    constructor(color, numberOfSprites, height, width, depth) {\n        this.numberOfSprites = 60;\n        this.height = 1;\n        this.width = 1;\n        this.depth = 1;\n        this.density = 105;\n        this.velocity = [];\n        this.positions = [];\n        this.randomPos = (Math.random() - 0.5) * 2;\n        this.speedSizeChange = 0.137;\n        this.coordEpearingParticle = 0.3;\n        this.opacityCoef = 0.0199;\n        this.wrapper = new three_5.Object3D();\n        this.newPosition = new three_5.Vector3(0, 0.5, 0);\n        this.soursePosition = new three_5.Vector3(0, 0.5, 0);\n        this.cubeVisibility = true;\n        this.sizeCoef = 0.1;\n        this.externalForce = new three_5.Vector3(0, 0, 0);\n        this.opacityDecrease = [];\n        this.opacity = 1.0;\n        this._frameDuration = 300;\n        this.height = height;\n        this.width = width;\n        this.depth = depth;\n        this.numberOfSprites = numberOfSprites;\n        // create explosion\n        this.material = new BlastFog_Shader_1.BlastFogMaterial();\n        this.material.side = three_5.DoubleSide;\n        this.material.uniforms.uColor.value.setHex(color);\n        this.material.uniforms.uFrameDuration.value = this._frameDuration;\n        this.generate(this.density, this.height, this.width, this.depth, this.newPosition);\n    }\n    ;\n    generate(density, height, width, depth, newPosition) {\n        const boxGeometry = new three_5.BoxGeometry(1, 1, 1);\n        const boxMaterial = new three_5.MeshBasicMaterial({ color: 0x00ff00 });\n        boxMaterial.wireframe = true;\n        if (!this.cube) {\n            this.cube = new three_5.Mesh(boxGeometry, boxMaterial);\n            // this.wrapper.add( this.cube );\n        }\n        if (this.mesh) {\n            this.geometry.dispose();\n            boxGeometry.dispose();\n            this.wrapper.remove(this.mesh);\n        }\n        this.newPosition.x = newPosition.x;\n        this.newPosition.y = newPosition.y;\n        this.newPosition.z = newPosition.z;\n        this.height = height;\n        this.width = width;\n        this.depth = depth;\n        let explosionPointPosition = new three_5.Vector3(0, 0, 0);\n        this.numberOfSprites = density * height * width * depth;\n        let size = [], uv, offsetFrame = [], sizeIncrease = [], opacityDecrease = [], color = [];\n        const transformRow1 = [];\n        const transformRow2 = [];\n        const transformRow3 = [];\n        const transformRow4 = [];\n        for (let i = 0; i < this.numberOfSprites; i++) {\n            let x = (Math.random() - 0.5) * width * 0.001;\n            let y = Math.random() * height * 0.001;\n            let z = (Math.random() - 0.5) * depth * 0.001;\n            let distanceX = explosionPointPosition.x - x;\n            let distanceY = y - explosionPointPosition.y;\n            let distanceZ = explosionPointPosition.z - z;\n            if (Math.abs(distanceX) > width / 2.5 - Math.random() - 0.5) {\n                distanceX -= Math.random() - 0.5;\n            }\n            if (Math.abs(distanceY) > height / 2.5 - Math.random() - 0.5) {\n                distanceY -= Math.random() - 0.5;\n            }\n            if (Math.abs(distanceZ) > depth / 2.5 - Math.random() - 0.5) {\n                distanceZ -= Math.random() - 0.5;\n            }\n            this.scaleX = 0.071;\n            this.scaleY = 0.071;\n            this.scaleZ = 0.071;\n            const rotationX = 0;\n            const rotationY = 0;\n            const rotationZ = 0;\n            let transformMatrix = new three_5.Matrix4().compose(new three_5.Vector3(distanceX * 0.43, distanceY * 0.43, distanceZ * 0.43), new three_5.Quaternion().setFromEuler(new three_5.Euler(rotationX, rotationY, rotationZ)), new three_5.Vector3(this.scaleX, this.scaleY, this.scaleZ)).toArray();\n            transformRow1.push(transformMatrix[0], transformMatrix[1], transformMatrix[2], transformMatrix[3]);\n            transformRow2.push(transformMatrix[4], transformMatrix[5], transformMatrix[6], transformMatrix[7]);\n            transformRow3.push(transformMatrix[8], transformMatrix[9], transformMatrix[10], transformMatrix[11]);\n            transformRow4.push(transformMatrix[12], transformMatrix[13], transformMatrix[14], transformMatrix[15]);\n            size.push(0);\n            sizeIncrease.push(Math.random() * 0.02);\n            this.opacityDecrease.push(Math.random() * 1.2);\n            this.velocity.push((Math.random() - 0.5) * 2 / 100, (Math.random() - 0.5) * 2 / 100, (Math.random() - 0.5) * 2 / 100);\n            offsetFrame.push(Math.floor(Math.random() * 50 * 16));\n        }\n        this.positions = [\n            -1.0, -1.0, 0.0,\n            1.0, -1.0, 0.0,\n            1.0, 1.0, 0.0,\n            1.0, 1.0, 0.0,\n            -1.0, 1.0, 0.0,\n            -1.0, -1.0, 0.0\n        ];\n        uv = [\n            0, 0,\n            1, 0,\n            1, 1,\n            1, 1,\n            0, 1,\n            0, 0\n        ];\n        this.geometry = new three_5.InstancedBufferGeometry();\n        this.geometry.setAttribute('position', new three_5.Float32BufferAttribute(this.positions, 3));\n        this.geometry.setAttribute('uv', new three_5.Float32BufferAttribute(uv, 2));\n        this.geometry.setAttribute('transformRow1', new three_5.InstancedBufferAttribute(new Float32Array(transformRow1), 4));\n        this.geometry.setAttribute('transformRow2', new three_5.InstancedBufferAttribute(new Float32Array(transformRow2), 4));\n        this.geometry.setAttribute('transformRow3', new three_5.InstancedBufferAttribute(new Float32Array(transformRow3), 4));\n        this.geometry.setAttribute('transformRow4', new three_5.InstancedBufferAttribute(new Float32Array(transformRow4), 4));\n        this.geometry.setAttribute('offsetFrame', new three_5.InstancedBufferAttribute(new Float32Array(offsetFrame), 1));\n        this.geometry.setAttribute('velocity', new three_5.InstancedBufferAttribute(new Float32Array(this.velocity), 3));\n        this.geometry.setAttribute('opacityDecrease', new three_5.InstancedBufferAttribute(new Float32Array(this.opacityDecrease), 1));\n        this.geometry.setAttribute('size', new three_5.InstancedBufferAttribute(new Float32Array(size), 1));\n        this.mesh = new three_5.Mesh(this.geometry, this.material);\n        this.wrapper.add(this.mesh);\n    }\n    ;\n    update(delta, intersects, externalForce) {\n        for (let i = 0; i < this.numberOfSprites; i++) {\n            const newSize = this.geometry.attributes.size.getX(i) + this.speedSizeChange * this.sizeCoef;\n            this.geometry.attributes.size.setX(i, newSize);\n            let velosityX = this.geometry.attributes.velocity.getX(i);\n            let velosityY = this.geometry.attributes.velocity.getY(i);\n            let velosityZ = this.geometry.attributes.velocity.getZ(i);\n            let newPosX = this.geometry.attributes.transformRow4.getX(i);\n            let newPosY = this.geometry.attributes.transformRow4.getY(i);\n            let newPosZ = this.geometry.attributes.transformRow4.getZ(i);\n            let velosityAccelerationX = (intersects.x - newPosX + externalForce.x) / 200;\n            let velosityAccelerationY = (intersects.y - newPosY + externalForce.y) / 200;\n            ;\n            let velosityAccelerationZ = (intersects.z - newPosZ + externalForce.z) / 200;\n            const newOpacity = this.geometry.attributes.opacityDecrease.getX(i) - this.opacityCoef;\n            this.geometry.attributes.opacityDecrease.setX(i, newOpacity);\n            newPosX += ((velosityX + velosityAccelerationX * newOpacity) * delta) / 16;\n            newPosY += ((velosityY + velosityAccelerationY * newOpacity) * delta) / 16;\n            newPosZ += ((velosityZ + velosityAccelerationZ * newOpacity) * delta) / 16;\n            if (newOpacity <= 0.001) {\n                newPosX = (Math.random() - 0.5) * this.coordEpearingParticle + this.soursePosition.x;\n                newPosY = (Math.random() - 0.5) * this.coordEpearingParticle + this.soursePosition.y;\n                newPosZ = (Math.random() - 0.5) * this.coordEpearingParticle + this.soursePosition.z;\n                this.geometry.attributes.size.setX(i, 0);\n                // this.geometry.attributes.opacityDecrease.setX( i, 1 );\n            }\n            this.geometry.attributes.transformRow4.setX(i, newPosX);\n            this.geometry.attributes.transformRow4.setY(i, newPosY);\n            this.geometry.attributes.transformRow4.setZ(i, newPosZ);\n        }\n        this.geometry.attributes.opacityDecrease.needsUpdate = true;\n        this.geometry.attributes.size.needsUpdate = true;\n        this.geometry.attributes.transformRow4.needsUpdate = true;\n    }\n    ;\n    //\n    get frameDuration() {\n        return this._frameDuration;\n    }\n    ;\n    set frameDuration(frameDuration) {\n        this.material.uniforms.uFrameDuration.value = frameDuration;\n        this._frameDuration = this.material.uniforms.uFrameDuration.value;\n    }\n    ;\n    get outerColor() {\n        return this._outerColor;\n    }\n    ;\n    set outerColor(color) {\n        this._outerColor = color;\n        if (typeof color === 'string') {\n            this.material.uniforms.uColor.value.setHex(parseInt(color.replace('#', '0x')));\n        }\n        else {\n            this.material.uniforms.uColor.value.setHex(color);\n        }\n    }\n    ;\n    get innerColor() {\n        return this._innerColor;\n    }\n    ;\n    set innerColor(color) {\n        this._innerColor = color;\n        if (typeof color === 'string') {\n            this.material.uniforms.uInnerColor.value.setHex(parseInt(color.replace('#', '0x')));\n        }\n        else {\n            this.material.uniforms.uInnerColor.value.setHex(color);\n        }\n    }\n    ;\n}\nexports.BlastFog = BlastFog;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlastSphere = void 0;\nconst three_3 = require(\"three\");\nconst BlastSphere_Shader_1 = require(\"./shaders/BlastSphere.Shader\");\n//\nclass BlastSphere {\n    constructor() {\n        this.wrapper = new three_3.Object3D();\n        this.size = 0.01;\n        this.generate();\n    }\n    ;\n    generate() {\n        this.geometry = new three_3.SphereBufferGeometry(this.size, 100);\n        this.material = new BlastSphere_Shader_1.BlastSphereMaterial();\n        let sphere = new three_3.Mesh(this.geometry, this.material);\n        if (sphere) {\n            this.geometry.dispose();\n            this.wrapper.remove(sphere);\n        }\n        this.wrapper.add(sphere);\n        // this.mainScene.scene.add( sphere );\n    }\n    ;\n    update(elapsedTime) {\n        this.material.uniforms.uTime.value = elapsedTime;\n    }\n    ;\n}\nexports.BlastSphere = BlastSphere;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Explosion = void 0;\nconst GroundShockWave_1 = require(\"./GroundShockWave\");\nconst BlastSphere_1 = require(\"./BlastSphere\");\nconst BlastFog_1 = require(\"./BlastFog\");\nconst three_2 = require(\"three\");\n//\nclass Explosion {\n    // public mainScene: MainScene = new MainScene();\n    constructor() {\n        console.log('explosion here!');\n        this.addBlastSphere();\n        this.addBlastFog();\n        this.addGroundShockWave();\n    }\n    ;\n    addBlastSphere() {\n        this.blastSphere = new BlastSphere_1.BlastSphere();\n        this.animation = new Animation();\n        // this.mainScene.scene.add( this.blastSphere.wrapper );\n    }\n    ;\n    addBlastFog() {\n        // Explosion\n        let props = {\n            numberOfSprites: 16,\n            height: 1,\n            width: 1,\n            depth: 1,\n            outerColor: '#331402',\n            innerColor: '#ffd675',\n            newPosition: new three_2.Vector3(0, 0.5, 0)\n        };\n        this.blastFog = new BlastFog_1.BlastFog(new three_2.Color().setHex(+props.outerColor.replace('#', '0x')).getHex(), props.numberOfSprites, props.height, props.width, props.depth);\n        this.animation = new Animation();\n        // this.mainScene.scene.add( this.blastFog.wrapper );\n    }\n    ;\n    addGroundShockWave() {\n        this.groundShockWave = new GroundShockWave_1.GroundShockWave();\n        this.animation = new Animation();\n        // this.mainScene.scene.add( this.groundShockWave.wrapper );\n    }\n    ;\n    update(delta, externalForce, elapsedTime) {\n        let explosionPosition = new three_2.Vector3(0, 0, 0);\n        this.blastFog.update(delta, explosionPosition, externalForce);\n        this.blastSphere.update(elapsedTime);\n        this.groundShockWave.update(elapsedTime);\n    }\n    ;\n}\nexports.Explosion = Explosion;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GroundShockWave = void 0;\nconst three_4 = require(\"three\");\nconst GroundShockWave_Shader_1 = require(\"./shaders/GroundShockWave.Shader\");\n//\nclass GroundShockWave {\n    constructor() {\n        this.wrapper = new three_4.Object3D();\n        this.size = 1;\n        this.generate();\n    }\n    ;\n    generate() {\n        this.geometry = new three_4.PlaneBufferGeometry(this.size, 1);\n        this.material = new GroundShockWave_Shader_1.GroundShockWaveMaterial();\n        const transformRow1 = [];\n        const transformRow2 = [];\n        const transformRow3 = [];\n        const transformRow4 = [];\n        let brightness = [];\n        for (let i = 0; i < 50; i++) {\n            brightness.push((Math.random() - 0.5) * 2);\n            let rotationX = -Math.PI * 0.5;\n            let rotationY = 0;\n            let rotationZ = 0;\n            let transformMatrix = new three_4.Matrix4().compose(new three_4.Vector3(0, 0.01, 0), new three_4.Quaternion().setFromEuler(new three_4.Euler(rotationX, rotationY, rotationZ)), new three_4.Vector3(1, 1, 1)).toArray();\n            transformRow1.push(transformMatrix[0], transformMatrix[1], transformMatrix[2], transformMatrix[3]);\n            transformRow2.push(transformMatrix[4], transformMatrix[5], transformMatrix[6], transformMatrix[7]);\n            transformRow3.push(transformMatrix[8], transformMatrix[9], transformMatrix[10], transformMatrix[11]);\n            transformRow4.push(transformMatrix[12], transformMatrix[13], transformMatrix[14], transformMatrix[15]);\n        }\n        this.geometry.setAttribute('brightness', new three_4.Float32BufferAttribute(brightness, 1));\n        this.geometry.setAttribute('transformRow1', new three_4.Float32BufferAttribute(new Float32Array(transformRow1), 4));\n        this.geometry.setAttribute('transformRow2', new three_4.Float32BufferAttribute(new Float32Array(transformRow2), 4));\n        this.geometry.setAttribute('transformRow3', new three_4.Float32BufferAttribute(new Float32Array(transformRow3), 4));\n        this.geometry.setAttribute('transformRow4', new three_4.Float32BufferAttribute(new Float32Array(transformRow4), 4));\n        let circle = new three_4.Mesh(this.geometry, this.material);\n        if (circle) {\n            this.geometry.dispose();\n            this.wrapper.remove(circle);\n        }\n        this.wrapper.add(circle);\n        // this.mainScene.scene.add( circle );\n    }\n    ;\n    update(elapsedTime) {\n        this.material.uniforms.uTime.value = elapsedTime;\n    }\n    ;\n}\nexports.GroundShockWave = GroundShockWave;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MainScene = void 0;\nconst three_1 = require(\"three\");\nconst OrbitControls_js_1 = require(\"three/examples/jsm/controls/OrbitControls.js\");\nconst ExplosionGfx_1 = require(\"./ExplosionGfx\");\nconst tweakpane_1 = require(\"tweakpane\");\n//\nclass MainScene {\n    constructor() {\n        this.elapsedTime = 0;\n        this.externalForce = new three_1.Vector3(0, 0, 0);\n        this.wrapper = new three_1.Object3D();\n        this.sizes = {\n            height: 0,\n            width: 0\n        };\n        this.tick = () => {\n            window.requestAnimationFrame(this.tick);\n            this.delta = this.clock.getDelta() * 1000;\n            this.elapsedTime += this.delta;\n            if (this.sizes.width !== window.innerWidth || this.sizes.height !== window.innerHeight) {\n                this.resize();\n            }\n            //\n            if (this.explosion)\n                this.explosion.update(this.delta, this.externalForce, this.elapsedTime);\n            this.mapControls.update();\n            this.renderer.render(this.scene, this.camera);\n        };\n        this.init();\n        console.log('it worked!');\n    }\n    ;\n    init() {\n        // Canvas\n        this.canvas = document.querySelector('canvas.webglView');\n        // Sizes\n        this.sizes.width = window.innerWidth,\n            this.sizes.height = window.innerHeight;\n        // Scene\n        this.scene = new three_1.Scene();\n        this.scene.background = new three_1.Color('#c9e1ff');\n        // Camera\n        this.camera = new three_1.PerspectiveCamera(25, this.sizes.width / this.sizes.height, 0.1, 500);\n        this.cameraDepth = new three_1.PerspectiveCamera(25, this.sizes.width / this.sizes.height, 0.1, 4);\n        this.camera.position.set(6, 5.6, 6);\n        this.scene.add(this.camera);\n        //  Axes Helper\n        const axesHelper = new three_1.AxesHelper(5);\n        // this.scene.add( axesHelper );\n        // Light\n        const light = new three_1.PointLight('#ffffff', 4);\n        light.position.set(0, 7, 7);\n        this.scene.add(light);\n        // Controls\n        this.mapControls = new OrbitControls_js_1.MapControls(this.camera, this.canvas);\n        // Renderer\n        this.renderer = new three_1.WebGLRenderer({ canvas: this.canvas });\n        this.renderer.setSize(this.sizes.width, this.sizes.height);\n        this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n        // Plane\n        let planeGeometry = new three_1.PlaneBufferGeometry(5, 5, 1, 1);\n        let planeMaterial = new three_1.MeshBasicMaterial({ color: '#fcf3d7' });\n        let plane = new three_1.Mesh(planeGeometry, planeMaterial);\n        plane.rotation.x -= Math.PI / 2;\n        plane.rotation.z -= Math.PI / 3;\n        this.scene.add(plane);\n        // Resize\n        window.addEventListener('resize', this.resize());\n        //\n        this.clock = new three_1.Clock();\n        //\n        this.createExplosion();\n        this.debug();\n        this.tick();\n        // this.debug();\n    }\n    ;\n    createExplosion() {\n        if (this.explosion) {\n            this.explosion.blastSphere.material.dispose();\n            this.explosion.blastSphere.geometry.dispose();\n            this.explosion.blastFog.material.dispose();\n            this.explosion.blastFog.geometry.dispose();\n            this.explosion.groundShockWave.geometry.dispose();\n            this.explosion.groundShockWave.material.dispose();\n            this.scene.remove(this.explosion.blastSphere.wrapper);\n            this.scene.remove(this.explosion.blastFog.wrapper);\n            this.scene.remove(this.explosion.groundShockWave.wrapper);\n        }\n        this.explosion = new ExplosionGfx_1.Explosion();\n        this.scene.add(this.explosion.groundShockWave.wrapper);\n        this.scene.add(this.explosion.blastFog.wrapper);\n        this.scene.add(this.explosion.blastSphere.wrapper);\n    }\n    ;\n    resize() {\n        this.sizes.width = window.innerWidth;\n        this.sizes.height = window.innerHeight;\n        this.camera.aspect = this.sizes.width / this.sizes.height;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(this.sizes.width, this.sizes.height);\n        this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    }\n    ;\n    debug() {\n        let props = {\n            fogInnerColor: '#ff0000',\n            fogOuterColor: '#FFCE00',\n            sphereInnerColor: '#ff0000',\n            sphereOuterColor: '#FFCE00'\n        };\n        let pane = new tweakpane_1.Pane({ title: \"Explosion\" }); //  expanded: false\n        let paneSphere = pane.addFolder({ title: \"Sphere\" });\n        let paneFog = pane.addFolder({ title: \"Fog\" });\n        let explosionSize = pane.addFolder({ title: \"Size\" });\n        let explosionSpeed = pane.addFolder({ title: \"Speed\" });\n        let explosionFade = pane.addFolder({ title: \"Fading\" });\n        pane.element.parentElement.style['width'] = '330px';\n        paneSphere.addInput(props, 'sphereInnerColor').on('change', () => {\n            this.explosion.blastSphere.material.uniforms.uInnerColor.value.setHex(parseInt(props.sphereInnerColor.replace('#', '0x')));\n        });\n        paneSphere.addInput(props, 'sphereOuterColor').on('change', () => {\n            this.explosion.blastSphere.material.uniforms.uInnerColor.value.setHex(parseInt(props.sphereOuterColor.replace('#', '0x')));\n        });\n        //\n        paneFog.addInput(props, 'fogInnerColor').on('change', () => {\n            this.explosion.blastFog.material.uniforms.uInnerColor.value.setHex(parseInt(props.fogInnerColor.replace('#', '0x')));\n        });\n        paneFog.addInput(props, 'fogOuterColor').on('change', () => {\n            this.explosion.blastFog.material.uniforms.uInnerColor.value.setHex(parseInt(props.fogOuterColor.replace('#', '0x')));\n        });\n        // Sizes\n        explosionSize.addInput(this.explosion.blastSphere, 'size', { min: 0.01, max: 0.5, step: 0.001, label: 'sphere size' }).on('change', (options) => {\n            if (this.explosion) {\n                this.explosion.blastSphere.material.dispose();\n                this.explosion.blastSphere.geometry.dispose();\n                this.explosion.blastFog.material.dispose();\n                this.explosion.blastFog.geometry.dispose();\n                this.explosion.groundShockWave.geometry.dispose();\n                this.explosion.groundShockWave.material.dispose();\n                this.scene.remove(this.explosion.blastSphere.wrapper);\n                this.scene.remove(this.explosion.blastFog.wrapper);\n                this.scene.remove(this.explosion.groundShockWave.wrapper);\n            }\n            this.explosion.blastSphere.size = options.value;\n            this.createExplosion();\n        });\n        explosionSize.addInput(this.explosion.groundShockWave, 'size', { min: 1, max: 10, step: 0.1, label: 'ground shock wave size' }).on('change', (options) => {\n            if (this.explosion) {\n                this.explosion.blastSphere.material.dispose();\n                this.explosion.blastSphere.geometry.dispose();\n                this.explosion.blastFog.material.dispose();\n                this.explosion.blastFog.geometry.dispose();\n                this.explosion.groundShockWave.geometry.dispose();\n                this.explosion.groundShockWave.material.dispose();\n                this.scene.remove(this.explosion.blastSphere.wrapper);\n                this.scene.remove(this.explosion.blastFog.wrapper);\n                this.scene.remove(this.explosion.groundShockWave.wrapper);\n            }\n            this.explosion.groundShockWave.size = options.value;\n            this.createExplosion();\n        });\n        // Speed\n        explosionSize.addInput(this.explosion.blastFog, 'scaleX', { min: 1, max: 1000.0, step: 0.001, label: 'fog size' }).on('change', (options) => {\n            if (this.explosion) {\n                this.explosion.blastSphere.material.dispose();\n                this.explosion.blastSphere.geometry.dispose();\n                this.explosion.blastFog.material.dispose();\n                this.explosion.blastFog.geometry.dispose();\n                this.explosion.groundShockWave.geometry.dispose();\n                this.explosion.groundShockWave.material.dispose();\n                this.scene.remove(this.explosion.blastSphere.wrapper);\n                this.scene.remove(this.explosion.blastFog.wrapper);\n                this.scene.remove(this.explosion.groundShockWave.wrapper);\n            }\n            for (let i = 0; i < this.explosion.blastFog.numberOfSprites; i++) {\n                // this.explosion.blastFog.scaleX = options.value;\n                // this.explosion.blastFog.scaleY = options.value;\n                // this.explosion.blastFog.scaleZ = options.value;\n                let scaleX = this.explosion.blastFog.geometry.attributes.transformRow1.getX(i);\n                let scaleY = this.explosion.blastFog.geometry.attributes.transformRow2.getY(i);\n                let scaleZ = this.explosion.blastFog.geometry.attributes.transformRow3.getZ(i);\n                this.explosion.blastFog.geometry.attributes.transformRow1.setX(scaleX * options.value, i);\n                this.explosion.blastFog.geometry.attributes.transformRow2.setY(scaleY * options.value, i);\n                this.explosion.blastFog.geometry.attributes.transformRow3.setZ(scaleZ * options.value, i);\n            }\n            ;\n            this.explosion.blastFog.geometry.attributes.transformRow1.needsUpdate = true;\n            this.explosion.blastFog.geometry.attributes.transformRow2.needsUpdate = true;\n            this.explosion.blastFog.geometry.attributes.transformRow3.needsUpdate = true;\n            this.createExplosion();\n        });\n        // Fading\n        explosionSpeed.addInput(this.explosion.groundShockWave.material.uniforms.uFadingCoef, 'value', { min: 1, max: 100.0, step: 0.001, label: 'ground shock wave fading' }).on('change', (options) => {\n            if (this.explosion) {\n                this.explosion.blastSphere.material.dispose();\n                this.explosion.blastSphere.geometry.dispose();\n                this.explosion.blastFog.material.dispose();\n                this.explosion.blastFog.geometry.dispose();\n                this.explosion.groundShockWave.geometry.dispose();\n                this.explosion.groundShockWave.material.dispose();\n                this.scene.remove(this.explosion.blastSphere.wrapper);\n                this.scene.remove(this.explosion.blastFog.wrapper);\n                this.scene.remove(this.explosion.groundShockWave.wrapper);\n            }\n            this.explosion.groundShockWave.material.uniforms.uFadingCoef.value = options.value;\n            this.createExplosion();\n        });\n        explosionSpeed.addInput(this.explosion.blastFog, 'opacity', { min: 1, max: 100.0, step: 0.001, label: 'fog fading' }).on('change', (options) => {\n            if (this.explosion) {\n                this.explosion.blastSphere.material.dispose();\n                this.explosion.blastSphere.geometry.dispose();\n                this.explosion.blastFog.material.dispose();\n                this.explosion.blastFog.geometry.dispose();\n                this.explosion.groundShockWave.geometry.dispose();\n                this.explosion.groundShockWave.material.dispose();\n                this.scene.remove(this.explosion.blastSphere.wrapper);\n                this.scene.remove(this.explosion.blastFog.wrapper);\n                this.scene.remove(this.explosion.groundShockWave.wrapper);\n            }\n            for (let i = 0; i < this.explosion.blastFog.numberOfSprites; i++) {\n                this.explosion.blastFog.opacityDecrease[i] = options.value;\n            }\n            ;\n            this.createExplosion();\n        });\n        explosionFade.addInput(this.explosion.groundShockWave.material.uniforms.uFadingCoef, 'value', { min: 1, max: 100.0, step: 0.001, label: 'ground shock wavw fading' }).on('change', (options) => {\n            if (this.explosion) {\n                this.explosion.blastSphere.material.dispose();\n                this.explosion.blastSphere.geometry.dispose();\n                this.explosion.blastFog.material.dispose();\n                this.explosion.blastFog.geometry.dispose();\n                this.explosion.groundShockWave.geometry.dispose();\n                this.explosion.groundShockWave.material.dispose();\n                this.scene.remove(this.explosion.blastSphere.wrapper);\n                this.scene.remove(this.explosion.blastFog.wrapper);\n                this.scene.remove(this.explosion.groundShockWave.wrapper);\n            }\n            this.explosion.groundShockWave.material.uniforms.uFadingCoef.value = options.value;\n            this.createExplosion();\n        });\n    }\n    ;\n}\nexports.MainScene = MainScene;\n;\nexports.default = new MainScene();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlastFogMaterial = void 0;\nconst three_9 = require(\"three\");\n//\nlet randomnum = Math.random();\nconst textureLoader = new three_9.TextureLoader();\nconst explosionTexture = textureLoader.load('resources/textures/explosion.png');\nconst noise = textureLoader.load('resources/textures/tNoise.png');\nclass BlastFogMaterial extends three_9.ShaderMaterial {\n    constructor() {\n        super();\n        this.vertexShader = `\n        attribute vec4 transformRow1;\n        attribute vec4 transformRow2;\n        attribute vec4 transformRow3;\n        attribute vec4 transformRow4;\n        attribute float offsetFrame;\n        attribute float size;\n        attribute vec3 velocity;\n        attribute float opacityDecrease;\n\n        varying vec2 vUv;\n        varying float vOffsetFrame;\n        varying float vCurrentFrameId;\n        varying float vNextFrameId;\n        varying float vOpacityDecrease;\n        varying float vOpacity;\n        varying vec3 vPosition;\n\n        uniform float uRandomNum;\n        uniform sampler2D uNoise;\n        uniform float uTime;\n        uniform float uFrameDuration;\n        uniform float uOpacity;\n\n        void main() {\n\n            float numOfFrames = 16.0;\n\n            float currentFrameId = mod( floor( mod( uTime + offsetFrame, numOfFrames * uFrameDuration ) / uFrameDuration ), numOfFrames );\n\n            float nextFrameId;\n            if ( currentFrameId == numOfFrames - 1.0 ) {\n\n                nextFrameId = 0.0;\n\n            } else {\n\n                nextFrameId = currentFrameId + 1.0;\n\n            }\n\n            mat4 transforms = mat4(\n                transformRow1,\n                transformRow2,\n                transformRow3,\n                transformRow4\n            );\n\n            gl_Position = projectionMatrix * ( modelViewMatrix * transforms * vec4( 0.0, 0.0, 0.0, 1.0 ) + vec4( position * size, 1.0 ) );\n\n            vUv = uv;\n            vOffsetFrame = offsetFrame;\n            vNextFrameId = nextFrameId;\n            vCurrentFrameId  = currentFrameId;\n            vOpacityDecrease = opacityDecrease;\n            vOpacity = uOpacity;\n            vPosition = transformRow4.xyz;\n\n        }\n        `,\n            this.depthWrite = false;\n        this.transparent = true;\n        // this.wireframe = true;\n        this.fragmentShader = `\n        varying vec2 vUv;\n        varying float vOffsetFrame;\n        varying float vCurrentFrameId;\n        varying float vNextFrameId;\n        varying float vOpacityDecrease;\n        varying float vOpacity;\n        varying vec3 vPosition;\n\n        uniform sampler2D uPointTexture;\n        uniform float alphaTest;\n        uniform vec3 uColor;\n        uniform float uTime;\n        uniform float uFrameDuration;\n        uniform vec3 uInnerColor;\n        uniform float uTimeDuration;\n\n        void main() {\n\n            gl_FragColor = vec4( uColor, 0.04 );\n\n            //\n\n            vec4 offsets;\n\n            offsets.y = floor( vCurrentFrameId / 4.0 ) * 0.25;\n            offsets.x = mod( vCurrentFrameId, 4.0 ) * 0.25;\n\n            offsets.w = floor( vNextFrameId / 4.0 ) * 0.25;\n            offsets.z = mod( vNextFrameId, 4.0 ) * 0.25;\n\n            //\n\n            vec4 texture1 = texture2D( uPointTexture, vec2( vUv.x * 0.25 + offsets.x, vUv.y * 0.25 + offsets.y ) );\n            vec4 texture2 = texture2D( uPointTexture, vec2( vUv.x * 0.25 + offsets.z, vUv.y * 0.25 + offsets.w ) );\n\n            float fragmentTime = mod( uTime + vOffsetFrame, uFrameDuration ) / uFrameDuration;\n\n            gl_FragColor = mix( texture1, texture2, fragmentTime );\n            vec3 finalColor = uColor;\n\n            finalColor = mix( uColor, uInnerColor, step( 0.3, vOpacityDecrease ) * vOpacityDecrease );\n\n            gl_FragColor *= vec4( finalColor, vOpacityDecrease * vOpacity );\n\n            if ( gl_FragColor.a < alphaTest ) discard;\n\n        }\n        `;\n        this.uniforms = {\n            uRandomNum: { value: randomnum },\n            uPointTexture: { value: explosionTexture },\n            uNoise: { value: noise },\n            alphaTest: { value: 0.0001 },\n            uColor: { value: new three_9.Color(0xeb9c15) },\n            uTime: { value: 0.0 },\n            uTimeX: { value: 0.0 },\n            uTimeY: { value: 0.0 },\n            uFrameDuration: { value: 16.0 },\n            uOpacity: { value: 0.9 },\n            uInnerColor: { value: new three_9.Color(0xb57507) },\n        };\n    }\n}\nexports.BlastFogMaterial = BlastFogMaterial;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlastSphereMaterial = void 0;\nconst three_7 = require(\"three\");\n//\nconst textureLoader = new three_7.TextureLoader();\nconst noise = textureLoader.load('resources/textures/tNoise.png');\nclass BlastSphereMaterial extends three_7.ShaderMaterial {\n    constructor() {\n        super();\n        this.vertexShader = `\n        uniform sampler2D uNoise;\n        uniform float uTime;\n\n        varying vec2 vUv;\n        varying vec3 vNormal;\n        varying float vNoise;\n\n\n        //\n        vec3 mod289(vec3 x)\n        {\n            return x - floor(x * (1.0 / 289.0)) * 289.0;\n        }\n\n        vec4 mod289(vec4 x)\n        {\n            return x - floor(x * (1.0 / 289.0)) * 289.0;\n        }\n\n        vec4 permute(vec4 x)\n        {\n            return mod289(((x*34.0)+1.0)*x);\n        }\n\n        vec4 taylorInvSqrt(vec4 r)\n        {\n            return 1.79284291400159 - 0.85373472095314 * r;\n        }\n\n        vec3 fade(vec3 t) {\n            return t*t*t*(t*(t*6.0-15.0)+10.0);\n        }\n\n        // Classic Perlin noise, periodic variant\n        float pnoise(vec3 P, vec3 rep)\n        {\n            vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n            vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n            Pi0 = mod289(Pi0);\n            Pi1 = mod289(Pi1);\n            vec3 Pf0 = fract(P); // Fractional part for interpolation\n            vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n            vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n            vec4 iy = vec4(Pi0.yy, Pi1.yy);\n            vec4 iz0 = Pi0.zzzz;\n            vec4 iz1 = Pi1.zzzz;\n\n            vec4 ixy = permute(permute(ix) + iy);\n            vec4 ixy0 = permute(ixy + iz0);\n            vec4 ixy1 = permute(ixy + iz1);\n\n            vec4 gx0 = ixy0 * (1.0 / 7.0);\n            vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n            gx0 = fract(gx0);\n            vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n            vec4 sz0 = step(gz0, vec4(0.0));\n            gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n            gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n            vec4 gx1 = ixy1 * (1.0 / 7.0);\n            vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n            gx1 = fract(gx1);\n            vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n            vec4 sz1 = step(gz1, vec4(0.0));\n            gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n            gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n            vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n            vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n            vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n            vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n            vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n            vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n            vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n            vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n            vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n            g000 *= norm0.x;\n            g010 *= norm0.y;\n            g100 *= norm0.z;\n            g110 *= norm0.w;\n            vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n            g001 *= norm1.x;\n            g011 *= norm1.y;\n            g101 *= norm1.z;\n            g111 *= norm1.w;\n\n            float n000 = dot(g000, Pf0);\n            float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n            float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n            float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n            float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n            float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n            float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n            float n111 = dot(g111, Pf1);\n\n            vec3 fade_xyz = fade(Pf0);\n            vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n            vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n            float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n            return 2.2 * n_xyz;\n        }\n        //\n\n        float turbulence( vec3 p ) {\n\n            float w = 100.0;\n            float t = -.5;\n\n            for (float f = 1.0 ; f <= 10.0 ; f++ ){\n              float power = pow( 2.0, f );\n              t += abs( pnoise( vec3( power * p ), vec3( 10.0, 10.0, 10.0 ) ) / power );\n            }\n\n            return t;\n\n        }\n\n        void main() {\n\n            // float n = texture2D( uNoise, abs( normal.xy ) ).r * 0.15;\n\n            float distortion = pnoise( ( normal * 0.98 + uTime * 0.0005 ) * 2.3, vec3( 100.0 ) ) * 0.005;\n\n            vec3 newPosition = position + ( normal * distortion );\n            // newPosition.y -= 0.1;\n            // gl_Position = projectionMatrix * modelViewMatrix * vec4( vec3( newPosition.x + uTime * 0.004, newPosition.y + uTime * 0.004, newPosition.z + uTime * 0.004 ), 1.0 );\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition * uTime * 0.1, 1.0 );\n\n            vUv = uv;\n            vNormal = normal;\n            vNoise = distortion;\n\n        }`,\n            this.transparent = true;\n        this.fragmentShader = `\n        uniform float uTime;\n        uniform sampler2D uNoise;\n        uniform vec3 uInnerColor;\n        uniform vec3 uOuterColor;\n        uniform vec3 uMiddleColor;\n\n        varying vec2 vUv;\n        varying vec3 vNormal;\n        varying float vNoise;\n\n        float random( vec3 scale, float seed ){\n            return fract( sin( dot( gl_FragCoord.xyz + seed, scale ) ) * 43758.5453 + seed ) ;\n        }\n\n        void main() {\n\n            float r = 1.1 * random( vec3( 12.9898, 78.233, 151.7182 ), 0.0 );\n            float noise = texture2D( uNoise, abs( vNormal.xy ) ).r * 1.1;\n            vec3 color = mix( uInnerColor, uOuterColor, noise * 1.6 + r * 1.4 ) * 1.2; //+ noise * 1.0;\n            // vec3 color = vec3( noise + r );\n            color = mix( color, uMiddleColor * 0.9, noise );\n\n            gl_FragColor.rgb = color;\n            gl_FragColor.a = 1.0 - uTime * 0.0015;\n\n        }`,\n            this.uniforms = {\n                uTime: { value: 0.0 },\n                uNoise: { value: noise },\n                uInnerColor: { value: new three_7.Color(0xffe55e) },\n                uOuterColor: { value: new three_7.Color(0xd8b625) },\n                uMiddleColor: { value: new three_7.Color(0xfa7305) }\n            };\n    }\n}\nexports.BlastSphereMaterial = BlastSphereMaterial;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GroundShockWaveMaterial = void 0;\nconst three_8 = require(\"three\");\n//\nconst textureLoader = new three_8.TextureLoader();\nconst circleTexture = textureLoader.load('resources/textures/circle3.png');\nconst noise = textureLoader.load('resources/textures/tNoise.png');\nclass GroundShockWaveMaterial extends three_8.ShaderMaterial {\n    constructor() {\n        super();\n        this.vertexShader = `\n        varying vec2 vUv;\n\n        attribute float brightness;\n        attribute vec4 transformRow1;\n        attribute vec4 transformRow2;\n        attribute vec4 transformRow3;\n        attribute vec4 transformRow4;\n\n        uniform float uTime;\n\n        void main() {\n\n            mat4 transforms = mat4 (\n                transformRow1,\n                transformRow2,\n                transformRow3,\n                transformRow4\n            );\n\n            gl_Position = projectionMatrix * modelViewMatrix * transforms * vec4( position * uTime * 0.002, 1.0 );\n\n            vUv = uv;\n\n        }`,\n            this.transparent = true;\n        // this.alphaTest = 10.0001;\n        this.fragmentShader = `\n        varying vec2 vUv;\n\n        uniform float uTime;\n        uniform sampler2D uTexture;\n        uniform vec3 uColor;\n        uniform sampler2D uNoise;\n        uniform float uFadingCoef;\n\n        void main() {\n\n            vec2 centeredUv = vec2( vUv - 0.5 );\n            float distanceToCenter = length( centeredUv );\n\n            float circle = step( distanceToCenter, 0.5 );\n\n            float strength = step( 0.02, abs( distance( vUv, vec2( 0.5 ) ) - 0.1 - uTime * 0.0001 ) );\n\n            float noise = texture2D( uNoise, vUv ).r * 5.1;\n            // if ( distanceToCenter > 0.47 + sin( uTime * 0.0005 ) * 0.04 * noise ) { discard; }\n            // if ( distanceToCenter < 0.4 + sin( uTime * 0.0005 ) * 0.04 * noise ) { discard; }\n            if ( distanceToCenter > 0.47 ) { discard; }\n            if ( distanceToCenter < 0.4 ) { discard; }\n\n            // gl_FragColor = vec4( vec3( strength ), 1.0 - uTime * 10.1 ); //* texture2D( uTexture, gl_PointCoord );\n\n            gl_FragColor = texture2D( uTexture, vUv );\n            // gl_FragColor = texture2D( uTexture, vUv + sin(uTime * 0.0005) * 0.1 * noise );\n            gl_FragColor.rgb += uColor;\n\n            gl_FragColor.a = 0.7 - uTime * 0.0007 * uFadingCoef;\n\n        }`,\n            this.uniforms = {\n                uTime: { value: 0.0 },\n                uTexture: { value: circleTexture },\n                uNoise: { value: noise },\n                uColor: { value: new three_8.Color(0x2b1605) },\n                uFadingCoef: { value: 1.0 }\n            };\n    }\n}\nexports.GroundShockWaveMaterial = GroundShockWaveMaterial;\n;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunklive_city\"] = self[\"webpackChunklive_city\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendor\"], () => (__webpack_require__(\"./src/scripts/index.ts\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}